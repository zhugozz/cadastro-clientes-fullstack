{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Collapse from \"../Collapse/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport AccordionContext from \"./AccordionContext.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport accordionClasses, { getAccordionUtilityClass } from \"./accordionClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    square,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    heading: ['heading'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\nconst AccordionRoot = styled(Paper, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${accordionClasses.region}`]: styles.region\n    }, styles.root, !ownerState.square && styles.rounded, !ownerState.disableGutters && styles.gutters];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&::before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: (theme.vars || theme).palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&::before': {\n        display: 'none'\n      }\n    },\n    [`&.${accordionClasses.expanded}`]: {\n      '&::before': {\n        opacity: 0\n      },\n      '&:first-of-type': {\n        marginTop: 0\n      },\n      '&:last-of-type': {\n        marginBottom: 0\n      },\n      '& + &': {\n        '&::before': {\n          display: 'none'\n        }\n      }\n    },\n    [`&.${accordionClasses.disabled}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    }\n  };\n}), memoTheme(({\n  theme\n}) => ({\n  variants: [{\n    props: props => !props.square,\n    style: {\n      borderRadius: 0,\n      '&:first-of-type': {\n        borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,\n        borderTopRightRadius: (theme.vars || theme).shape.borderRadius\n      },\n      '&:last-of-type': {\n        borderBottomLeftRadius: (theme.vars || theme).shape.borderRadius,\n        borderBottomRightRadius: (theme.vars || theme).shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    }\n  }, {\n    props: props => !props.disableGutters,\n    style: {\n      [`&.${accordionClasses.expanded}`]: {\n        margin: '16px 0'\n      }\n    }\n  }]\n})));\nconst AccordionHeading = styled('h3', {\n  name: 'MuiAccordion',\n  slot: 'Heading'\n})({\n  all: 'unset'\n});\nconst AccordionRegion = styled('div', {\n  name: 'MuiAccordion',\n  slot: 'Region'\n})({});\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n  const {\n    children: childrenProp,\n    className,\n    defaultExpanded = false,\n    disabled = false,\n    disableGutters = false,\n    expanded: expandedProp,\n    onChange,\n    square = false,\n    slots = {},\n    slotProps = {},\n    TransitionComponent: TransitionComponentProp,\n    TransitionProps: TransitionPropsProp,\n    ...other\n  } = props;\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    disableGutters,\n    toggle: handleChange\n  }), [expanded, disabled, disableGutters, handleChange]);\n  const ownerState = {\n    ...props,\n    square,\n    disabled,\n    disableGutters,\n    expanded\n  };\n  const classes = useUtilityClasses(ownerState);\n  const backwardCompatibleSlots = {\n    transition: TransitionComponentProp,\n    ...slots\n  };\n  const backwardCompatibleSlotProps = {\n    transition: TransitionPropsProp,\n    ...slotProps\n  };\n  const externalForwardedProps = {\n    slots: backwardCompatibleSlots,\n    slotProps: backwardCompatibleSlotProps\n  };\n  const [RootSlot, rootProps] = useSlot('root', {\n    elementType: AccordionRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    className: clsx(classes.root, className),\n    shouldForwardComponentProp: true,\n    ownerState,\n    ref,\n    additionalProps: {\n      square\n    }\n  });\n  const [AccordionHeadingSlot, accordionProps] = useSlot('heading', {\n    elementType: AccordionHeading,\n    externalForwardedProps,\n    className: classes.heading,\n    ownerState\n  });\n  const [TransitionSlot, transitionProps] = useSlot('transition', {\n    elementType: Collapse,\n    externalForwardedProps,\n    ownerState\n  });\n  const [AccordionRegionSlot, accordionRegionProps] = useSlot('region', {\n    elementType: AccordionRegion,\n    externalForwardedProps,\n    ownerState,\n    className: classes.region,\n    additionalProps: {\n      'aria-labelledby': summary.props.id,\n      id: summary.props['aria-controls'],\n      role: 'region'\n    }\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [/*#__PURE__*/_jsx(AccordionHeadingSlot, {\n      ...accordionProps,\n      children: /*#__PURE__*/_jsx(AccordionContext.Provider, {\n        value: contextValue,\n        children: summary\n      })\n    }), /*#__PURE__*/_jsx(TransitionSlot, {\n      in: expanded,\n      timeout: \"auto\",\n      ...transitionProps,\n      children: /*#__PURE__*/_jsx(AccordionRegionSlot, {\n        ...accordionRegionProps,\n        children: children\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n    if (isFragment(summary)) {\n      return new Error(\"MUI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('MUI: Expected the first child of Accordion to be a valid element.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, it removes the margin between two expanded accordion items and the increase of height.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    heading: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    region: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    heading: PropTypes.elementType,\n    region: PropTypes.elementType,\n    root: PropTypes.elementType,\n    transition: PropTypes.elementType\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @deprecated Use `slotProps.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Accordion;","map":{"version":3,"names":["React","isFragment","PropTypes","clsx","chainPropTypes","composeClasses","styled","memoTheme","useDefaultProps","Collapse","Paper","AccordionContext","useControlled","useSlot","accordionClasses","getAccordionUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","square","expanded","disabled","disableGutters","slots","root","heading","region","AccordionRoot","name","slot","overridesResolver","props","styles","rounded","gutters","theme","transition","duration","transitions","shortest","position","create","overflowAnchor","left","top","right","height","content","opacity","backgroundColor","vars","palette","divider","display","marginTop","marginBottom","action","disabledBackground","variants","style","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","margin","AccordionHeading","all","AccordionRegion","Accordion","forwardRef","inProps","ref","children","childrenProp","className","defaultExpanded","expandedProp","onChange","slotProps","TransitionComponent","TransitionComponentProp","TransitionProps","TransitionPropsProp","other","setExpandedState","controlled","default","state","handleChange","useCallback","event","summary","Children","toArray","contextValue","useMemo","toggle","backwardCompatibleSlots","backwardCompatibleSlotProps","externalForwardedProps","RootSlot","rootProps","elementType","shouldForwardComponentProp","additionalProps","AccordionHeadingSlot","accordionProps","TransitionSlot","transitionProps","AccordionRegionSlot","accordionRegionProps","id","role","Provider","value","in","timeout","process","env","NODE_ENV","propTypes","node","isRequired","Error","isValidElement","object","string","bool","func","oneOfType","sx","arrayOf"],"sources":["C:/Users/user/Desktop/Cadastro clientes fullstack/frontend/node_modules/@mui/material/esm/Accordion/Accordion.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Collapse from \"../Collapse/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport AccordionContext from \"./AccordionContext.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport accordionClasses, { getAccordionUtilityClass } from \"./accordionClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    square,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    heading: ['heading'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\nconst AccordionRoot = styled(Paper, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${accordionClasses.region}`]: styles.region\n    }, styles.root, !ownerState.square && styles.rounded, !ownerState.disableGutters && styles.gutters];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&::before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: (theme.vars || theme).palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&::before': {\n        display: 'none'\n      }\n    },\n    [`&.${accordionClasses.expanded}`]: {\n      '&::before': {\n        opacity: 0\n      },\n      '&:first-of-type': {\n        marginTop: 0\n      },\n      '&:last-of-type': {\n        marginBottom: 0\n      },\n      '& + &': {\n        '&::before': {\n          display: 'none'\n        }\n      }\n    },\n    [`&.${accordionClasses.disabled}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    }\n  };\n}), memoTheme(({\n  theme\n}) => ({\n  variants: [{\n    props: props => !props.square,\n    style: {\n      borderRadius: 0,\n      '&:first-of-type': {\n        borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,\n        borderTopRightRadius: (theme.vars || theme).shape.borderRadius\n      },\n      '&:last-of-type': {\n        borderBottomLeftRadius: (theme.vars || theme).shape.borderRadius,\n        borderBottomRightRadius: (theme.vars || theme).shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    }\n  }, {\n    props: props => !props.disableGutters,\n    style: {\n      [`&.${accordionClasses.expanded}`]: {\n        margin: '16px 0'\n      }\n    }\n  }]\n})));\nconst AccordionHeading = styled('h3', {\n  name: 'MuiAccordion',\n  slot: 'Heading'\n})({\n  all: 'unset'\n});\nconst AccordionRegion = styled('div', {\n  name: 'MuiAccordion',\n  slot: 'Region'\n})({});\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n  const {\n    children: childrenProp,\n    className,\n    defaultExpanded = false,\n    disabled = false,\n    disableGutters = false,\n    expanded: expandedProp,\n    onChange,\n    square = false,\n    slots = {},\n    slotProps = {},\n    TransitionComponent: TransitionComponentProp,\n    TransitionProps: TransitionPropsProp,\n    ...other\n  } = props;\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    disableGutters,\n    toggle: handleChange\n  }), [expanded, disabled, disableGutters, handleChange]);\n  const ownerState = {\n    ...props,\n    square,\n    disabled,\n    disableGutters,\n    expanded\n  };\n  const classes = useUtilityClasses(ownerState);\n  const backwardCompatibleSlots = {\n    transition: TransitionComponentProp,\n    ...slots\n  };\n  const backwardCompatibleSlotProps = {\n    transition: TransitionPropsProp,\n    ...slotProps\n  };\n  const externalForwardedProps = {\n    slots: backwardCompatibleSlots,\n    slotProps: backwardCompatibleSlotProps\n  };\n  const [RootSlot, rootProps] = useSlot('root', {\n    elementType: AccordionRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    className: clsx(classes.root, className),\n    shouldForwardComponentProp: true,\n    ownerState,\n    ref,\n    additionalProps: {\n      square\n    }\n  });\n  const [AccordionHeadingSlot, accordionProps] = useSlot('heading', {\n    elementType: AccordionHeading,\n    externalForwardedProps,\n    className: classes.heading,\n    ownerState\n  });\n  const [TransitionSlot, transitionProps] = useSlot('transition', {\n    elementType: Collapse,\n    externalForwardedProps,\n    ownerState\n  });\n  const [AccordionRegionSlot, accordionRegionProps] = useSlot('region', {\n    elementType: AccordionRegion,\n    externalForwardedProps,\n    ownerState,\n    className: classes.region,\n    additionalProps: {\n      'aria-labelledby': summary.props.id,\n      id: summary.props['aria-controls'],\n      role: 'region'\n    }\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [/*#__PURE__*/_jsx(AccordionHeadingSlot, {\n      ...accordionProps,\n      children: /*#__PURE__*/_jsx(AccordionContext.Provider, {\n        value: contextValue,\n        children: summary\n      })\n    }), /*#__PURE__*/_jsx(TransitionSlot, {\n      in: expanded,\n      timeout: \"auto\",\n      ...transitionProps,\n      children: /*#__PURE__*/_jsx(AccordionRegionSlot, {\n        ...accordionRegionProps,\n        children: children\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n    if (isFragment(summary)) {\n      return new Error(\"MUI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('MUI: Expected the first child of Accordion to be a valid element.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, it removes the margin between two expanded accordion items and the increase of height.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    heading: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    region: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    heading: PropTypes.elementType,\n    region: PropTypes.elementType,\n    root: PropTypes.elementType,\n    transition: PropTypes.elementType\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @deprecated Use `slots.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @deprecated Use `slotProps.transition` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Accordion;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}